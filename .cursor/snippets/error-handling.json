{
  "name": "FastAPI Error Handling",
  "description": "FastAPI error handling with proper status codes and audit logging",
  "prefix": "errorhandle",
  "body": [
    "try:",
    "    ${1:# Operation}",
    "    ",
    "    # Create audit log for success",
    "    audit_log = AuditLog.create_log(",
    "        event_type=AuditEventType.${2:EVENT_TYPE},",
    "        event_description=f\"${3:Success description}\",",
    "        user_id=${4:user_id},",
    "        success=True",
    "    )",
    "    db.add(audit_log)",
    "    await db.commit()",
    "    ",
    "    return ${5:result}",
    "    ",
    "except Exception as e:",
    "    await db.rollback()",
    "    ",
    "    # Create audit log for failure",
    "    audit_log = AuditLog.create_log(",
    "        event_type=AuditEventType.${2:EVENT_TYPE},",
    "        event_description=f\"${6:Failure description}\",",
    "        user_id=${4:user_id},",
    "        success=False,",
    "        error_message=str(e)",
    "    )",
    "    db.add(audit_log)",
    "    await db.commit()",
    "    ",
    "    raise HTTPException(",
    "        status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,",
    "        detail=\"${7:Error message}\"",
    "    )"
  ],
  "scope": "python"
} 